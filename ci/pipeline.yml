---
jobs:
- name: deploy-cf-development
  serial_groups: [development]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
      trigger: true
    - get: cf-deployment
      trigger: true
    - get: pipeline-tasks
    - get: cf-manifests
      resource: cf-manifests
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
    - get: cf-stemcell-bionic
      trigger: true
    - get: uaa-customized-release
      trigger: true
    - get: cg-s3-secureproxy-release
      trigger: true
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-development
    params: &deploy-params
      manifest: cf-deployment/cf-deployment.yml
      releases:
      - uaa-customized-release/*.tgz
      - cg-s3-secureproxy-release/*.tgz
      stemcells:
      - cf-stemcell-bionic/*.tgz
      ops_files:
      - cf-deployment/operations/rename-network-and-deployment.yml
      - cf-manifests/bosh/opsfiles/use-s3-blobstore.yml
      - cf-deployment/operations/use-external-dbs.yml
      - cf-deployment/operations/stop-skipping-tls-validation.yml
      - cf-deployment/operations/set-bbs-active-key.yml
      - cf-deployment/operations/enable-service-discovery.yml
      - cf-manifests/bosh/opsfiles/remove-routing-components-for-transition.yml
      - cf-manifests/bosh/opsfiles/latest-stemcell.yml
      - cf-manifests/bosh/opsfiles/use-bionic.yml
      - cf-manifests/bosh/opsfiles/clients.yml
      - cf-manifests/bosh/opsfiles/users.yml
      - cf-manifests/bosh/opsfiles/secureproxy.yml
      - cf-manifests/bosh/opsfiles/apps-domain.yml
      - cf-manifests/bosh/opsfiles/api-defaults.yml
      - cf-manifests/bosh/opsfiles/uaa-customized.yml
      - cf-manifests/bosh/opsfiles/uaa-branding.yml
      - cf-manifests/bosh/opsfiles/uaa-groups.yml
      - cf-manifests/bosh/opsfiles/uaa-login.yml
      - cf-manifests/bosh/opsfiles/uaa-saml.yml
      - cf-manifests/bosh/opsfiles/uaa-user.yml
      - cf-manifests/bosh/opsfiles/uaa-cors.yml
      - cf-manifests/bosh/opsfiles/encryption.yml
      - cf-manifests/bosh/opsfiles/sql.yml
      - cf-manifests/bosh/opsfiles/log-levels.yml
      - cf-manifests/bosh/opsfiles/instance-profiles.yml
      - cf-manifests/bosh/opsfiles/platform-cells.yml
      - cf-manifests/bosh/opsfiles/diego-cell-disk.yml
      - cf-manifests/bosh/opsfiles/diego-dns.yml
      - cf-manifests/bosh/opsfiles/diego-overcommit.yml
      - cf-manifests/bosh/opsfiles/diego-rds-certs.yml
      - cf-manifests/bosh/opsfiles/scaling-development.yml
      - cf-manifests/bosh/opsfiles/cf-networking.yml
      - cf-manifests/bosh/opsfiles/disable-secure-service-credentials.yml
      - cf-manifests/bosh/opsfiles/smoke-tests.yml
      - cf-manifests/bosh/opsfiles/routing.yml
#remove once cf-deployment catches up - 12/13/21
      - cf-manifests/bosh/opsfiles/temp-buildpack.yml
      vars_files:
      - cf-manifests/bosh/varsfiles/development.yml
      - terraform-secrets/terraform.yml
  - task: update-isolation-segments
    file: cf-manifests/ci/update-isolation-segments.yml
    params:
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      PLATFORM_ISOLATION_SEGMENT: ((platform-isolation-segment-development))
      PLATFORM_ORGANIZATION: ((platform-organization-development))
      PLATFORM_SPACE: ((platform-space-development))
      VOLUME_ISOLATION_SEGMENT: ((volume-isolation-segment-development))
      VOLUME_TARGETS: ((volume-targets-development))

  - task: enable-cf-features
    file: cf-manifests/ci/enable-cf-features.yml
    params:
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      ENABLED_FEATURE_FLAGS: |
        private_domain_creation
        app_bits_upload
        app_scaling
        route_creation
        service_instance_creation
        diego_docker
        set_roles_by_username
        unset_roles_by_username
        task_creation
        env_var_visibility
        space_scoped_private_broker_creation
        space_developer_env_var_visibility
        service_instance_sharing
        resource_matching
      DISABLED_FEATURE_FLAGS: |
        user_org_creation
        hide_marketplace_from_unauthenticated_users


  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))


- name: terraform-plan-development
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-development
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform
      STACK_NAME: cf-development
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: ((aws-region))
      CF_API_URL: ((cf-api-url-development))
      CF_CLIENT_ID: ((cf-client-id-development))
      CF_CLIENT_SECRET: ((cf-client-secret-development))
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_iaas_stack_name: development
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-apply-development
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      passed: [terraform-plan-development]
      trigger: true
    - get: pipeline-tasks
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-development
      TERRAFORM_ACTION: apply

- name: uaa-smoke-tests-development
  plan:
  - in_parallel:
    - get: pipeline-tasks
    - get: common
      resource: master-bosh-root-cert
      passed: [deploy-cf-development]
      trigger: true
    - get: cf-deployment-development
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-deployment
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-stemcell-bionic
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-development]
    - get: uaa-customized-release
      trigger: true
      passed: [deploy-cf-development]
    - get: cg-s3-secureproxy-release
      trigger: true
      passed: [deploy-cf-development]
  - task: smoke-tests
    file: pipeline-tasks/uaa-smoke-tests.yml
    params:
      BASE_URL: ((uaa-url-development))
  on_failure:
    put: slack
    params:
      text: |
        :x: UAA Smoke Tests for CF on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-client-auditing-development
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-development]
    - get: tests-timer
      trigger: true
  - task: uaa-client-audit
    file: cf-manifests/ci/uaa-client-audit.yml
    params:
      UAA_URL: ((uaa-url-development))
      UAA_CLIENT_ID: ((uaa-audit-client-id-development))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-development))
      CF_API_URL: ((cf-api-url-development))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      WHITELIST: ((uaa-audit-whitelist-development))

- name: uaa-monitor-account-creation-development
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-development]
    - get: hourly-timer
      trigger: true
  - task: uaa-monitor-account-creation
    file: cf-manifests/ci/uaa-monitor-account-creation.yml
    params:
      UAA_URL: ((uaa-url-development))
      UAA_CLIENT_ID: ((uaa-audit-client-id-development))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-development))
      GATEWAY_HOST: prometheus-staging.service.cf.internal

- name: tic-smoke-tests-development
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
      passed: [deploy-cf-development]
      trigger: true
    - get: cf-deployment-development
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-deployment
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-stemcell-bionic
      trigger: true
      passed: [deploy-cf-development]
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-development]
    - get: uaa-customized-release
      trigger: true
      passed: [deploy-cf-development]
    - get: cg-s3-secureproxy-release
      trigger: true
      passed: [deploy-cf-development]
  - task: smoke-tests
    file: cf-manifests/ci/tic-smoke-tests.yml
    params:
      CI: true
      API_HOSTNAME: api.dev.us-gov-west-1.aws-us-gov.cloud.gov
      BOSH_ENVIRONMENT: ((development-bosh-target))
      BOSH_CLIENT: ((development-bosh-username))
      BOSH_CLIENT_SECRET: ((development-bosh-password))
      BOSH_DEPLOYMENT_NAME: cf-development
      BOSH_CA_CERT: master-bosh-root-cert/master-bosh.crt
      RESTRICTED_DOMAIN: ((tic-test-restricted-domain))
      UNRESTRICTED_DOMAIN: ((tic-test-unrestricted-domain))
      SOURCE_ADDRESS_ALLOWED: ((tic-test-source-address-allowed))
      SOURCE_ADDRESS_FORBIDDEN: ((tic-test-source-address-forbidden))
      PROXY_ADDRESS_ALLOWED: ((tic-test-proxy-address-allowed))
      PROXY_ADDRESS_FORBIDDEN: ((tic-test-proxy-address-forbidden))
      TIC_SECRET_ALLOWED: ((tic-secret-development))
      TIC_SECRET_FORBIDDEN: ((tic-test-tic-secret-forbidden))
      TIC_PROTOCAL: https
      GOROUTER_PORT: 443
  on_failure:
    put: slack
    params:
      text: |
        :x: TIC Smoke Tests for CF on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: smoke-tests-development
  serial_groups: [development]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
      trigger: true
    - get: cf-deployment-development
      trigger: true
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
    - get: cf-deployment
      trigger: true
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
    - get: cf-stemcell-bionic
      trigger: true
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
    - get: cf-manifests
      trigger: true
    - get: uaa-customized-release
      trigger: true
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
    - get: cg-s3-secureproxy-release
      trigger: true
      passed: [tic-smoke-tests-development,uaa-smoke-tests-development]
  - task: run-errand
    attempts: 3
    params:
      BOSH_ENVIRONMENT: ((bosh.development.environment))
      BOSH_CLIENT: ((bosh.development.client))
      BOSH_CLIENT_SECRET: ((bosh.development.client-secret))
      BOSH_DEPLOYMENT: ((cf.development.name))
      BOSH_ERRAND: ((cf.development.smoke-tests))
      BOSH_CA_CERT: common/master-bosh.crt
    config: &smoke-tests-errand
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 18fgsa/concourse-task
      inputs:
        - name: common
      run:
        path: /bin/bash
        args:
        - -euxc
        - |
          bosh run-errand smoke-tests
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Smoke Tests for CF on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Smoke Tests for CF on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: test-space-egress-development
  serial_groups: [development]
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-development]
  - task: deploy-test-env
    file: cf-manifests/ci/test-space-egress/task-deploy-test-env.yml
    params: &test-space-egress-development-params
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_ORG: platform-test-space-egress
      CF_QUOTA: default
      CF_APP_DOMAIN: dev.us-gov-west-1.aws-us-gov.cloud.gov
    on_failure: &test-space-egress-development-clean-tasks
      task: clean-test-env
      file: cf-manifests/ci/test-space-egress/task-clean-test-env.yml
      params:
        <<: *test-space-egress-development-params
  - task: run-tests
    file: cf-manifests/ci/test-space-egress/task-run-tests.yml
    params:
      <<: *test-space-egress-development-params
    on_failure:
      <<: *test-space-egress-development-clean-tasks
    on_success:
      <<: *test-space-egress-development-clean-tasks
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Tests for space egress for CF on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Tests for space egress for CF on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-cf-staging
  serial_groups: [staging]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: cf-deployment
      trigger: true
      passed: [smoke-tests-development]
    - get: pipeline-tasks
    - get: cf-manifests
      trigger: true
      passed: [smoke-tests-development]
    - get: terraform-yaml
      resource: terraform-yaml-staging
    - get: cf-stemcell-bionic
      trigger: true
      passed: [smoke-tests-development]
    - get: uaa-customized-release
      trigger: true
      passed: [smoke-tests-development]
    - get: cg-s3-secureproxy-release
      trigger: true
      passed: [smoke-tests-development]
  - put: timestamp
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-staging
    params:
      <<: *deploy-params
      ops_files:
      - cf-deployment/operations/rename-network-and-deployment.yml
      - cf-manifests/bosh/opsfiles/use-s3-blobstore.yml
      - cf-deployment/operations/use-external-dbs.yml
      - cf-deployment/operations/stop-skipping-tls-validation.yml
      - cf-deployment/operations/set-bbs-active-key.yml
      - cf-deployment/operations/enable-service-discovery.yml
      - cf-manifests/bosh/opsfiles/remove-routing-components-for-transition.yml
      - cf-manifests/bosh/opsfiles/latest-stemcell.yml
      - cf-manifests/bosh/opsfiles/use-bionic.yml
      - cf-manifests/bosh/opsfiles/clients.yml
      - cf-manifests/bosh/opsfiles/users.yml
      - cf-manifests/bosh/opsfiles/secureproxy.yml
      - cf-manifests/bosh/opsfiles/apps-domain.yml
      - cf-manifests/bosh/opsfiles/api-defaults.yml
      - cf-manifests/bosh/opsfiles/uaa-customized.yml
      - cf-manifests/bosh/opsfiles/uaa-branding.yml
      - cf-manifests/bosh/opsfiles/uaa-login.yml
      - cf-manifests/bosh/opsfiles/uaa-saml.yml
      - cf-manifests/bosh/opsfiles/uaa-user.yml
      - cf-manifests/bosh/opsfiles/uaa-cors.yml
      - cf-manifests/bosh/opsfiles/encryption.yml
      - cf-manifests/bosh/opsfiles/sql.yml
      - cf-manifests/bosh/opsfiles/log-levels.yml
      - cf-manifests/bosh/opsfiles/instance-profiles.yml
      - cf-manifests/bosh/opsfiles/platform-cells.yml
      - cf-manifests/bosh/opsfiles/diego-cell-disk.yml
      - cf-manifests/bosh/opsfiles/diego-dns.yml
      - cf-manifests/bosh/opsfiles/diego-overcommit.yml
      - cf-manifests/bosh/opsfiles/diego-rds-certs.yml
      - cf-manifests/bosh/opsfiles/scaling-staging.yml
      - cf-manifests/bosh/opsfiles/cf-networking.yml
      - cf-manifests/bosh/opsfiles/disable-secure-service-credentials.yml
      - cf-manifests/bosh/opsfiles/smoke-tests.yml
      - cf-manifests/bosh/opsfiles/routing.yml
#remove once cf-deployment catches up - 12/13/21
      - cf-manifests/bosh/opsfiles/temp-buildpack.yml
      vars_files:
      - cf-manifests/bosh/varsfiles/staging.yml
      - terraform-secrets/terraform.yml
  - task: update-isolation-segments
    file: cf-manifests/ci/update-isolation-segments.yml
    params:
      CF_API_URL: ((cf-api-url-staging))
      CF_USERNAME: ((cf-username-staging))
      CF_PASSWORD: ((cf-password-staging))
      PLATFORM_ISOLATION_SEGMENT: ((platform-isolation-segment-staging))
      PLATFORM_ORGANIZATION: ((platform-organization-staging))
      PLATFORM_SPACE: ((platform-space-staging))
      VOLUME_ISOLATION_SEGMENT: ((volume-isolation-segment-staging))
      VOLUME_TARGETS: ((volume-targets-staging))

  - task: enable-cf-features
    file: cf-manifests/ci/enable-cf-features.yml
    params:
      CF_API_URL: ((cf-api-url-staging))
      CF_USERNAME: ((cf-username-staging))
      CF_PASSWORD: ((cf-password-staging))
      ENABLED_FEATURE_FLAGS: |
        private_domain_creation
        app_bits_upload
        app_scaling
        route_creation
        service_instance_creation
        diego_docker
        set_roles_by_username
        unset_roles_by_username
        task_creation
        env_var_visibility
        space_scoped_private_broker_creation
        space_developer_env_var_visibility
        service_instance_sharing
        resource_matching
      DISABLED_FEATURE_FLAGS: |
        user_org_creation
        hide_marketplace_from_unauthenticated_users
  - task: validate-zdt
    file: cf-manifests/ci/check-deployment-was-zdt.yml
    params:
      HEALTH_CHECK_ID: ((staging-route53-healthcheck-id))
      AWS_DEFAULT_REGION: ((staging-route53-healthcheck-region))
      AWS_ACCESS_KEY_ID: ((staging-route53-aws-access-key))
      AWS_SECRET_ACCESS_KEY: ((staging-route53-secret-access-key))

  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF on staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-smoke-tests-staging
  plan:
  - in_parallel:
    - get: pipeline-tasks
      passed: [deploy-cf-staging]
    - get: cf-deployment-staging
      passed: [deploy-cf-staging]
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/uaa-smoke-tests.yml
    params:
      BASE_URL: ((uaa-url-staging))
  on_failure:
    put: slack
    params:
      text: |
        :x: UAA Smoke Tests for CF on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-client-auditing-staging
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-staging]
    - get: tests-timer
      trigger: true
  - task: uaa-client-audit
    file: cf-manifests/ci/uaa-client-audit.yml
    params:
      UAA_URL: ((uaa-url-staging))
      UAA_CLIENT_ID: ((uaa-audit-client-id-staging))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-staging))
      CF_API_URL: ((cf-api-url-staging))
      GATEWAY_HOST: prometheus-staging.service.cf.internal
      WHITELIST: ((uaa-audit-whitelist-staging))

- name: uaa-monitor-account-creation-staging
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-staging]
    - get: hourly-timer
      trigger: true
  - task: uaa-monitor-account-creation
    file: cf-manifests/ci/uaa-monitor-account-creation.yml
    params:
      UAA_URL: ((uaa-url-staging))
      UAA_CLIENT_ID: ((uaa-audit-client-id-staging))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-staging))
      GATEWAY_HOST: prometheus-staging.service.cf.internal

- name: tic-smoke-tests-staging
  plan:
  - in_parallel:
    - get: cf-manifests
      passed: [deploy-cf-staging]
    - get: cf-deployment-staging
      passed: [deploy-cf-staging]
      trigger: true
    - get: cg-s3-secureproxy-release
      passed: [deploy-cf-staging]
    - get: master-bosh-root-cert
  - task: smoke-tests
    file: cf-manifests/ci/tic-smoke-tests.yml
    params:
      CI: true
      API_HOSTNAME: api.fr-stage.cloud.gov
      BOSH_ENVIRONMENT: ((staging-bosh-target))
      BOSH_CLIENT: ((staging-bosh-username))
      BOSH_CLIENT_SECRET: ((staging-bosh-password))
      BOSH_DEPLOYMENT_NAME: cf-staging
      BOSH_CA_CERT: master-bosh-root-cert/master-bosh.crt
      RESTRICTED_DOMAIN: ((tic-test-restricted-domain))
      UNRESTRICTED_DOMAIN: ((tic-test-unrestricted-domain))
      SOURCE_ADDRESS_ALLOWED: ((tic-test-source-address-allowed))
      SOURCE_ADDRESS_FORBIDDEN: ((tic-test-source-address-forbidden))
      PROXY_ADDRESS_ALLOWED: ((tic-test-proxy-address-allowed))
      PROXY_ADDRESS_FORBIDDEN: ((tic-test-proxy-address-forbidden))
      TIC_SECRET_ALLOWED: ((tic-secret-staging))
      TIC_SECRET_FORBIDDEN: ((tic-test-tic-secret-forbidden))
      TIC_PROTOCAL: https
      GOROUTER_PORT: 443
  on_failure:
    put: slack
    params:
      text: |
        :x: TIC Smoke Tests for CF on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-plan-staging
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config

      trigger: true
      passed: [terraform-apply-development]
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-staging
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform
      STACK_NAME: cf-staging
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: ((aws-region))
      CF_API_URL: ((cf-api-url-staging))
      CF_CLIENT_ID: ((cf-client-id-staging))
      CF_CLIENT_SECRET: ((cf-client-secret-staging))
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_iaas_stack_name: staging
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-apply-staging
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config
      trigger: true
      passed: [terraform-plan-staging]
    - get: pipeline-tasks
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-staging
      TERRAFORM_ACTION: apply

- name: smoke-tests-staging
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
      trigger: true
      passed: [deploy-cf-staging]
    - get: cf-deployment-staging
      passed: [deploy-cf-staging]
      trigger: true
    - get: cf-manifests
      passed: [deploy-cf-staging]
      trigger: true
    - get: cf-deployment
      trigger: true
      passed: [deploy-cf-staging]
    - get: cf-stemcell-bionic
      trigger: true
      passed: [deploy-cf-staging]
    - get: uaa-customized-release
      trigger: true
      passed: [deploy-cf-staging]
    - get: cg-s3-secureproxy-release
      passed: [deploy-cf-staging]
    - get: tests-timer
      trigger: true
    - get: terraform-config
      passed: [terraform-apply-staging]
      trigger: true
  - task: run-errand
    attempts: 3
    params:
      BOSH_ENVIRONMENT: ((bosh.staging.environment))
      BOSH_CLIENT: ((bosh.staging.client))
      BOSH_CLIENT_SECRET: ((bosh.staging.client-secret))
      BOSH_DEPLOYMENT: ((cf.staging.name))
      BOSH_ERRAND: ((cf.staging.smoke-tests))
      BOSH_CA_CERT: common/master-bosh.crt
    config: *smoke-tests-errand
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Smoke Tests for CF on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-news-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Smoke Tests for CF on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-staging
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: cf-acceptance-tests
    - get: cf-deployment-staging
      passed: [smoke-tests-staging]
      trigger: true
    # Get resources from upstream jobs for use in production deploy
    - get: cf-manifests
      passed: [smoke-tests-staging]
      trigger: true
    - get: cf-deployment
      trigger: true
      passed: [smoke-tests-staging]
    - get: cf-stemcell-bionic
      trigger: true
      passed: [smoke-tests-staging]
    - get: uaa-customized-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: cg-s3-secureproxy-release
      trigger: true
      passed: [smoke-tests-staging]
    - get: terraform-config
      trigger: true
      passed: [smoke-tests-staging]
  - task: test-config
    file: cf-manifests/ci/acceptance-tests-config.yml
    params:
      API_URL: api.fr-stage.cloud.gov
      APPS_DOMAIN: fr-stage.cloud.gov
      ADMIN_USER: admin
      EXISTING_USER: user-tester
      ADMIN_PASSWORD: ((admin-password-staging))
      EXISTING_USER_PASSWORD: ((existing-user-password-staging))
  - task: run-cats
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      FLAKE_ATTEMPTS: 3
      SKIP_REGEXP: routing.API|allows\spreviously-blocked\sip|Adding\sa\swildcard\sroute\sto\sa\sdomain|forwards\sapp\smessages\sto\sregistered\ssyslog\sdrains|uses\sa\sbuildpack\sfrom\sa\sgit\surl|when\sapp\shas\smultiple\sports\smapped
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Acceptance Tests for CF on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Acceptance Tests for CF on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: test-space-egress-staging
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-staging]
  - task: deploy-test-env
    file: cf-manifests/ci/test-space-egress/task-deploy-test-env.yml
    params: &test-space-egress-staging-params
      CF_API_URL: ((cf-api-url-staging))
      CF_USERNAME: ((cf-username-staging))
      CF_PASSWORD: ((cf-password-staging))
      CF_ORG: platform-test-space-egress
      CF_QUOTA: default
      CF_APP_DOMAIN: fr-stage.cloud.gov
    on_failure: &test-space-egress-staging-clean-tasks
      task: clean-test-env
      file: cf-manifests/ci/test-space-egress/task-clean-test-env.yml
      params:
        <<: *test-space-egress-staging-params
  - task: run-tests
    file: cf-manifests/ci/test-space-egress/task-run-tests.yml
    params:
      <<: *test-space-egress-staging-params
    on_failure:
      <<: *test-space-egress-staging-clean-tasks
    on_success:
      <<: *test-space-egress-staging-clean-tasks
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Tests for space egress for CF on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Tests for space egress for CF on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: plan-cf-production
  serial_groups: [production]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: pipeline-tasks
    - get: cf-deployment
      passed: [acceptance-tests-staging]
      trigger: true
    - get: cf-manifests
      passed: [acceptance-tests-staging]
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
    - get: cf-stemcell-bionic
      passed: [acceptance-tests-staging]
      trigger: true
    - get: uaa-customized-release
      passed: [acceptance-tests-staging]
    - get: cg-s3-secureproxy-release
      passed: [acceptance-tests-staging]
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-production
    params: &prod-deploy-params
      <<: *deploy-params
      dry_run: true
      ops_files:
      - cf-deployment/operations/rename-network-and-deployment.yml
      - cf-manifests/bosh/opsfiles/use-s3-blobstore.yml
      - cf-deployment/operations/use-external-dbs.yml
      - cf-deployment/operations/stop-skipping-tls-validation.yml
      - cf-deployment/operations/set-bbs-active-key.yml
      - cf-deployment/operations/enable-service-discovery.yml
      - cf-manifests/bosh/opsfiles/remove-routing-components-for-transition.yml
      - cf-manifests/bosh/opsfiles/latest-stemcell.yml
      - cf-manifests/bosh/opsfiles/use-bionic.yml
      - cf-manifests/bosh/opsfiles/clients.yml
      - cf-manifests/bosh/opsfiles/users.yml
      - cf-manifests/bosh/opsfiles/secureproxy.yml
      - cf-manifests/bosh/opsfiles/apps-domain.yml
      - cf-manifests/bosh/opsfiles/api-defaults.yml
      - cf-manifests/bosh/opsfiles/uaa-customized.yml
      - cf-manifests/bosh/opsfiles/uaa-branding.yml
      - cf-manifests/bosh/opsfiles/uaa-login.yml
      - cf-manifests/bosh/opsfiles/uaa-saml.yml
      - cf-manifests/bosh/opsfiles/uaa-user.yml
      - cf-manifests/bosh/opsfiles/uaa-cors.yml
      - cf-manifests/bosh/opsfiles/encryption.yml
      - cf-manifests/bosh/opsfiles/sql.yml
      - cf-manifests/bosh/opsfiles/log-levels.yml
      - cf-manifests/bosh/opsfiles/instance-profiles.yml
      - cf-manifests/bosh/opsfiles/platform-cells.yml
      - cf-manifests/bosh/opsfiles/diego-cell-disk.yml
      - cf-manifests/bosh/opsfiles/diego-dns.yml
      - cf-manifests/bosh/opsfiles/diego-overcommit.yml
      - cf-manifests/bosh/opsfiles/diego-rds-certs.yml
      - cf-manifests/bosh/opsfiles/scaling-production.yml
      - cf-manifests/bosh/opsfiles/cf-networking.yml
      - cf-manifests/bosh/opsfiles/routing.yml
      - cf-manifests/bosh/opsfiles/smoke-tests.yml
      - cf-manifests/bosh/opsfiles/disable-secure-service-credentials.yml
#remove once cf-deployment catches up - 12/13/21
      - cf-manifests/bosh/opsfiles/temp-buildpack.yml
      vars_files:
      - cf-manifests/bosh/varsfiles/production.yml
      - terraform-secrets/terraform.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: CF Production plan ready for review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to plan CF Production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-cf-production
  serial_groups: [production]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: pipeline-tasks
    - get: cf-deployment
      passed: [plan-cf-production]
    - get: cf-manifests
      passed: [plan-cf-production]
    - get: terraform-yaml
      resource: terraform-yaml-production
    - get: cf-stemcell-bionic
      passed: [plan-cf-production]
    - get: uaa-customized-release
      passed: [plan-cf-production]
    - get: cg-s3-secureproxy-release
      passed: [plan-cf-production]
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-production
    params:
      <<: *prod-deploy-params
      dry_run: false
  - task: update-isolation-segments
    file: cf-manifests/ci/update-isolation-segments.yml
    params:
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-username-production))
      CF_PASSWORD: ((cf-password-production))
      PLATFORM_ISOLATION_SEGMENT: ((platform-isolation-segment-production))
      PLATFORM_ORGANIZATION: ((platform-organization-production))
      PLATFORM_SPACE: ((platform-space-production))
      VOLUME_ISOLATION_SEGMENT: ((volume-isolation-segment-production))
      VOLUME_TARGETS: ((volume-targets-production))

  - task: enable-cf-features
    file: cf-manifests/ci/enable-cf-features.yml
    params:
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-username-production))
      CF_PASSWORD: ((cf-password-production))
      ENABLED_FEATURE_FLAGS: |
        private_domain_creation
        app_bits_upload
        app_scaling
        route_creation
        service_instance_creation
        diego_docker
        set_roles_by_username
        unset_roles_by_username
        task_creation
        env_var_visibility
        space_scoped_private_broker_creation
        space_developer_env_var_visibility
        service_instance_sharing
        resource_matching
      DISABLED_FEATURE_FLAGS: |
        user_org_creation
        hide_marketplace_from_unauthenticated_users

  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-smoke-tests-production
  plan:
  - in_parallel:
    - get: pipeline-tasks
      passed: [deploy-cf-production]
    - get: cf-deployment-production
      passed: [deploy-cf-production]
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/uaa-smoke-tests.yml
    params:
      BASE_URL: ((uaa-url-production))
  on_failure:
    put: slack
    params:
      text: |
        :x: UAA Smoke Tests for CF on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-client-auditing-production
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-production]
    - get: tests-timer
      trigger: true
  - task: uaa-client-audit
    file: cf-manifests/ci/uaa-client-audit.yml
    params:
      UAA_URL: ((uaa-url-production))
      UAA_CLIENT_ID: ((uaa-audit-client-id-production))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-production))
      CF_API_URL: ((cf-api-url-production))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      WHITELIST: ((uaa-audit-whitelist-production))

- name: uaa-monitor-account-creation-production
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-production]
    - get: hourly-timer
      trigger: true
  - task: uaa-monitor-account-creation
    file: cf-manifests/ci/uaa-monitor-account-creation.yml
    params:
      UAA_URL: ((uaa-url-production))
      UAA_CLIENT_ID: ((uaa-audit-client-id-production))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-production))
      GATEWAY_HOST: prometheus-production.service.cf.internal

- name: tic-smoke-tests-production
  plan:
  - in_parallel:
    - get: cf-manifests
      passed: [deploy-cf-production]
    - get: cf-deployment-production
      passed: [deploy-cf-production]
      trigger: true
    - get: master-bosh-root-cert
  - task: smoke-tests
    file: cf-manifests/ci/tic-smoke-tests.yml
    params:
      CI: true
      API_HOSTNAME: api.fr.cloud.gov
      BOSH_ENVIRONMENT: ((production-bosh-target))
      BOSH_CLIENT: ((production-bosh-username))
      BOSH_CLIENT_SECRET: ((production-bosh-password))
      BOSH_DEPLOYMENT_NAME: cf-production
      BOSH_CA_CERT: master-bosh-root-cert/master-bosh.crt
      RESTRICTED_DOMAIN: ((tic-test-restricted-domain))
      UNRESTRICTED_DOMAIN: ((tic-test-unrestricted-domain))
      SOURCE_ADDRESS_ALLOWED: ((tic-test-source-address-allowed))
      SOURCE_ADDRESS_FORBIDDEN: ((tic-test-source-address-forbidden))
      PROXY_ADDRESS_ALLOWED: ((tic-test-proxy-address-allowed))
      PROXY_ADDRESS_FORBIDDEN: ((tic-test-proxy-address-forbidden))
      TIC_SECRET_ALLOWED: ((tic-secret-production))
      TIC_SECRET_FORBIDDEN: ((tic-test-tic-secret-forbidden))
      TIC_PROTOCAL: https
      GOROUTER_PORT: 443
  on_failure:
    put: slack
    params:
      text: |
        :x: TIC Smoke Tests for CF on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-plan-production
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config

      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-production
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform
      STACK_NAME: cf-production
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: ((aws-region))
      CF_API_URL: ((cf-api-url-production))
      CF_CLIENT_ID: ((cf-client-id-production))
      CF_CLIENT_SECRET: ((cf-client-secret-production))
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_iaas_stack_name: production
      TF_VAR_tooling_stack_name: tooling
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-apply-production
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config

      passed: [terraform-plan-production]
    - get: pipeline-tasks
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-production
      TERRAFORM_ACTION: apply

- name: smoke-tests-production
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
      passed: [deploy-cf-production]
    - get: cf-deployment-production
      trigger: true
    - get: tests-timer
      trigger: true
  - task: run-errand
    attempts: 3
    params:
      BOSH_ENVIRONMENT: ((bosh.production.environment))
      BOSH_CLIENT: ((bosh.production.client))
      BOSH_CLIENT_SECRET: ((bosh.production.client-secret))
      BOSH_DEPLOYMENT: ((cf.production.name))
      BOSH_ERRAND: ((cf.production.smoke-tests))
      BOSH_CA_CERT: common/master-bosh.crt
    config: *smoke-tests-errand
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Smoke Tests for CF on prod PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-news-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Smoke Tests for CF on prod FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: test-space-egress-production
  serial_groups: [production]
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-production]
  - task: deploy-test-env
    file: cf-manifests/ci/test-space-egress/task-deploy-test-env.yml
    params: &test-space-egress-production-params
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-username-production))
      CF_PASSWORD: ((cf-password-production))
      CF_ORG: platform-test-space-egress
      CF_QUOTA: default
      CF_APP_DOMAIN: app.cloud.gov
    on_failure: &test-space-egress-production-clean-tasks
      task: clean-test-env
      file: cf-manifests/ci/test-space-egress/task-clean-test-env.yml
      params:
        <<: *test-space-egress-production-params
  - task: run-tests
    file: cf-manifests/ci/test-space-egress/task-run-tests.yml
    params:
      <<: *test-space-egress-production-params
    on_failure:
      <<: *test-space-egress-production-clean-tasks
    on_success:
      <<: *test-space-egress-production-clean-tasks
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Tests for space egress for CF on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Tests for space egress for CF on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: plan-cf-westb
  serial_groups: [westb]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: pipeline-tasks
    - get: cf-deployment
      passed: [acceptance-tests-staging]
      trigger: true
    - get: cf-manifests
      passed: [smoke-tests-development]
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-westb
    - get: cf-stemcell-bionic
      passed: [acceptance-tests-staging]
      trigger: true
    - get: uaa-customized-release
      passed: [acceptance-tests-staging]
    - get: cg-s3-secureproxy-release
      passed: [acceptance-tests-staging]
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-westb
    params: &westb-deploy-params
      <<: *deploy-params
      dry_run: true
      ops_files:
      - cf-deployment/operations/rename-network-and-deployment.yml
      - cf-manifests/bosh/opsfiles/use-s3-blobstore.yml
      - cf-deployment/operations/use-external-dbs.yml
      - cf-deployment/operations/stop-skipping-tls-validation.yml
      - cf-deployment/operations/set-bbs-active-key.yml
      - cf-deployment/operations/enable-service-discovery.yml
      - cf-manifests/bosh/opsfiles/remove-routing-components-for-transition.yml
      - cf-manifests/bosh/opsfiles/latest-stemcell.yml
      - cf-manifests/bosh/opsfiles/use-bionic.yml
      - cf-manifests/bosh/opsfiles/clients.yml
      - cf-manifests/bosh/opsfiles/users.yml
      - cf-manifests/bosh/opsfiles/secureproxy.yml
      - cf-manifests/bosh/opsfiles/apps-domain.yml
      - cf-manifests/bosh/opsfiles/api-defaults.yml
      - cf-manifests/bosh/opsfiles/uaa-customized.yml
      - cf-manifests/bosh/opsfiles/uaa-branding.yml
      - cf-manifests/bosh/opsfiles/uaa-login.yml
      - cf-manifests/bosh/opsfiles/uaa-saml.yml
      - cf-manifests/bosh/opsfiles/uaa-user.yml
      - cf-manifests/bosh/opsfiles/uaa-cors.yml
      - cf-manifests/bosh/opsfiles/encryption.yml
      - cf-manifests/bosh/opsfiles/sql.yml
      - cf-manifests/bosh/opsfiles/log-levels.yml
      - cf-manifests/bosh/opsfiles/instance-profiles.yml
      - cf-manifests/bosh/opsfiles/platform-cells.yml
      - cf-manifests/bosh/opsfiles/diego-cell-disk.yml
      - cf-manifests/bosh/opsfiles/diego-dns.yml
      - cf-manifests/bosh/opsfiles/diego-overcommit.yml
      - cf-manifests/bosh/opsfiles/diego-rds-certs.yml
      - cf-manifests/bosh/opsfiles/scaling-westb.yml
      - cf-manifests/bosh/opsfiles/cf-networking.yml
      - cf-manifests/bosh/opsfiles/routing.yml
      - cf-manifests/bosh/opsfiles/smoke-tests.yml
      - cf-manifests/bosh/opsfiles/disable-secure-service-credentials.yml
      - cf-manifests/bosh/opsfiles/use-master-bosh-ca.yml
#remove once cf-deployment catches up - 12/13/21
      - cf-manifests/bosh/opsfiles/temp-buildpack.yml
      vars_files:
      - cf-manifests/bosh/varsfiles/westb.yml
      - terraform-secrets/terraform.yml
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: CF West plan ready for review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to plan CF West
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-cf-westb
  serial_groups: [westb]
  serial: true
  plan:
  - in_parallel:
    - get: master-bosh-root-cert
    - get: pipeline-tasks
    - get: cf-deployment
      passed: [plan-cf-westb]
    - get: cf-manifests
      passed: [plan-cf-westb]
    - get: terraform-yaml
      resource: terraform-yaml-westb
    - get: cf-stemcell-bionic
      passed: [plan-cf-westb]
    - get: uaa-customized-release
      passed: [plan-cf-westb]
    - get: cg-s3-secureproxy-release
      passed: [plan-cf-westb]
  - task: terraform-secrets
    file: cf-manifests/ci/terraform-secrets.yml
  - put: cf-deployment-westb
    params:
      <<: *westb-deploy-params
      dry_run: false
  - task: update-isolation-segments
    file: cf-manifests/ci/update-isolation-segments.yml
    params:
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-username-westb))
      CF_PASSWORD: ((cf-password-westb))
      PLATFORM_ISOLATION_SEGMENT: ((platform-isolation-segment-westb))
      PLATFORM_ORGANIZATION: ((platform-organization-westb))
      PLATFORM_SPACE: ((platform-space-westb))
      VOLUME_ISOLATION_SEGMENT: ((volume-isolation-segment-westb))
      VOLUME_TARGETS: ((volume-targets-westb))

  - task: enable-cf-features
    file: cf-manifests/ci/enable-cf-features.yml
    params:
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-username-westb))
      CF_PASSWORD: ((cf-password-westb))
      ENABLED_FEATURE_FLAGS: |
        private_domain_creation
        app_bits_upload
        app_scaling
        route_creation
        service_instance_creation
        diego_docker
        set_roles_by_username
        unset_roles_by_username
        task_creation
        env_var_visibility
        space_scoped_private_broker_creation
        space_developer_env_var_visibility
        service_instance_sharing
        resource_matching
      DISABLED_FEATURE_FLAGS: |
        user_org_creation
        hide_marketplace_from_unauthenticated_users

  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed CF on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy CF on prod
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-smoke-tests-westb
  plan:
  - in_parallel:
    - get: pipeline-tasks
      passed: [deploy-cf-westb]
    - get: cf-deployment-westb
      passed: [deploy-cf-westb]
      trigger: true
  - task: smoke-tests
    file: pipeline-tasks/uaa-smoke-tests.yml
    params:
      BASE_URL: ((uaa-url-westb))
  on_failure:
    put: slack
    params:
      text: |
        :x: UAA Smoke Tests for CF on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: uaa-client-auditing-westb
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-westb]
    - get: tests-timer
      trigger: true
  - task: uaa-client-audit
    file: cf-manifests/ci/uaa-client-audit.yml
    params:
      UAA_URL: ((uaa-url-westb))
      UAA_CLIENT_ID: ((uaa-audit-client-id-westb))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-westb))
      CF_API_URL: ((cf-api-url-westb))
      GATEWAY_HOST: prometheus-production.service.cf.internal
      WHITELIST: ((uaa-audit-whitelist-westb))

- name: uaa-monitor-account-creation-westb
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      passed: [deploy-cf-westb]
    - get: hourly-timer
      trigger: true
  - task: uaa-monitor-account-creation
    file: cf-manifests/ci/uaa-monitor-account-creation.yml
    params:
      UAA_URL: ((uaa-url-westb))
      UAA_CLIENT_ID: ((uaa-audit-client-id-westb))
      UAA_CLIENT_SECRET: ((uaa-audit-client-secret-westb))
      GATEWAY_HOST: prometheus-production.service.cf.internal

- name: tic-smoke-tests-westb
  plan:
  - in_parallel:
    - get: cf-manifests
      passed: [deploy-cf-westb]
    - get: cf-deployment-westb
      passed: [deploy-cf-westb]
      trigger: true
    - get: master-bosh-root-cert
  - task: smoke-tests
    file: cf-manifests/ci/tic-smoke-tests.yml
    params:
      CI: true
      API_HOSTNAME: api.fr.cloud.gov
      BOSH_ENVIRONMENT: ((westb-bosh-target))
      BOSH_CLIENT: ((westb-bosh-username))
      BOSH_CLIENT_SECRET: ((westb-bosh-password))
      BOSH_DEPLOYMENT_NAME: cf-westb
      BOSH_CA_CERT: master-bosh-root-cert/master-bosh.crt
      RESTRICTED_DOMAIN: ((tic-test-restricted-domain))
      UNRESTRICTED_DOMAIN: ((tic-test-unrestricted-domain))
      SOURCE_ADDRESS_ALLOWED: ((tic-test-source-address-allowed))
      SOURCE_ADDRESS_FORBIDDEN: ((tic-test-source-address-forbidden))
      PROXY_ADDRESS_ALLOWED: ((tic-test-proxy-address-allowed))
      PROXY_ADDRESS_FORBIDDEN: ((tic-test-proxy-address-forbidden))
      TIC_SECRET_ALLOWED: ((tic-secret-westb))
      TIC_SECRET_FORBIDDEN: ((tic-test-tic-secret-forbidden))
      TIC_PROTOCAL: https
      GOROUTER_PORT: 443
  on_failure:
    put: slack
    params:
      text: |
        :x: TIC Smoke Tests for CF on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-plan-westb
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config

      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
  - task: terraform-plan
    file: terraform-templates/terraform/terraform-apply.yml
    params: &tf-westb
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: terraform
      STACK_NAME: cf-westb
      S3_TFSTATE_BUCKET: ((tf-state-bucket))
      AWS_DEFAULT_REGION: ((aws-region))
      CF_API_URL: ((cf-api-url-westb))
      CF_CLIENT_ID: ((cf-client-id-westb))
      CF_CLIENT_SECRET: ((cf-client-secret-westb))
      TF_VAR_remote_state_bucket: ((tf-state-bucket))
      TF_VAR_iaas_stack_name: westb
      TF_VAR_tooling_stack_name: master-west
  - put: slack
    params:
      text_file: terraform-state/message.txt
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-apply-westb
  plan:
  - in_parallel:
    - get: terraform-templates
      resource: terraform-config

      passed: [terraform-plan-westb]
    - get: pipeline-tasks
  - task: terraform-apply
    file: terraform-templates/terraform/terraform-apply.yml
    params:
      <<: *tf-westb
      TERRAFORM_ACTION: apply

- name: smoke-tests-westb
  serial_groups: [westb]
  plan:
  - in_parallel:
    - get: common
      resource: master-bosh-root-cert
      passed: [deploy-cf-westb]
    - get: cf-deployment-westb
      trigger: true
    - get: tests-timer
      trigger: true
  - task: run-errand
    attempts: 3
    params:
      BOSH_ENVIRONMENT: ((bosh.westb.environment))
      BOSH_CLIENT: ((bosh.westb.client))
      BOSH_CLIENT_SECRET: ((bosh.westb.client-secret))
      BOSH_DEPLOYMENT: ((cf.westb.name))
      BOSH_ERRAND: ((cf.westb.smoke-tests))
      BOSH_CA_CERT: common/master-bosh.crt
    config: *smoke-tests-errand
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Smoke Tests for CF on prod PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-news-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Smoke Tests for CF on prod FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: test-space-egress-westb
  serial_groups: [westb]
  plan:
  - in_parallel:
    - get: cf-deployment
    - get: cf-manifests
      trigger: true
      passed: [deploy-cf-westb]
  - task: deploy-test-env
    file: cf-manifests/ci/test-space-egress/task-deploy-test-env.yml
    params: &test-space-egress-westb-params
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-username-westb))
      CF_PASSWORD: ((cf-password-westb))
      CF_ORG: platform-test-space-egress
      CF_QUOTA: default
      CF_APP_DOMAIN: app.cloud.gov
    on_failure: &test-space-egress-westb-clean-tasks
      task: clean-test-env
      file: cf-manifests/ci/test-space-egress/task-clean-test-env.yml
      params:
        <<: *test-space-egress-westb-params
  - task: run-tests
    file: cf-manifests/ci/test-space-egress/task-run-tests.yml
    params:
      <<: *test-space-egress-westb-params
    on_failure:
      <<: *test-space-egress-westb-clean-tasks
    on_success:
      <<: *test-space-egress-westb-clean-tasks
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Tests for space egress for CF on westb PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Tests for space egress for CF on westb FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: master-bosh-root-cert
  type: s3-iam
  source:
    bucket: ((cf-private-bucket))
    region_name: ((aws-region))
    versioned_file: master-bosh.crt

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: main
    tag_filter: "v*"

- name: cf-acceptance-tests
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: cf-manifests
  type: git
  source:
    uri: ((cf-manifests-git-url))
    branch: ((cf-manifests-git-branch-production))
    paths:
    - ci/*
    - bosh/*

- name: terraform-config
  type: git
  source:
    uri: ((cf-manifests-git-url))
    branch: ((cf-manifests-git-branch-production))
    paths:
    - terraform/*

- name: cf-stemcell-bionic
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-bionic-go_agent

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-staging))
    region_name: ((aws-region))

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-production))
    region_name: ((aws-region))

- name: terraform-yaml-westb
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-westb))
    region_name: ((aws-region))

- name: cf-deployment-development
  type: bosh-deployment
  source:
    target: ((development-bosh-target))
    client: ((development-bosh-client))
    client_secret: ((development-bosh-client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: cf-development

- name: cf-deployment-staging
  type: bosh-deployment
  source:
    target: ((bosh.staging.environment))
    client: ((bosh.staging.client))
    client_secret: ((bosh.staging.client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: ((cf.staging.name))

- name: cf-deployment-production
  type: bosh-deployment
  source:
    target: ((production-bosh-target))
    client: ((production-bosh-client))
    client_secret: ((production-bosh-client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: cf-production

- name: cf-deployment-westb
  type: bosh-deployment
  source:
    target: ((westb-bosh-target))
    client: ((westb-bosh-client))
    client_secret: ((westb-bosh-client-secret))
    ca_cert: ((bosh-ca-cert))
    deployment: cf-westb

- name: uaa-customized-release
  type: s3-iam
  source:
    bucket: ((s3-bosh-releases-bucket))
    private: true
    regexp: uaa-customized-(.*).tgz
    region_name: ((aws-region))

- name: cg-s3-secureproxy-release
  type: s3-iam
  source:
    bucket: ((s3-bosh-releases-bucket))
    private: true
    regexp: secureproxy-(.*).tgz
    region_name: ((aws-region))

- name: tests-timer
  type: time
  source:
    interval: 10m

- name: hourly-timer
  type: time
  source:
    interval: 1h

- name: timestamp
  type: time

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

groups:
- name: all
  jobs:
  - deploy-cf-development
  - terraform-plan-development
  - terraform-apply-development
  - uaa-smoke-tests-development
  - uaa-client-auditing-development
  - uaa-monitor-account-creation-development
  - tic-smoke-tests-development
  - smoke-tests-development
  - test-space-egress-development
  - deploy-cf-staging
  - terraform-plan-staging
  - terraform-apply-staging
  - uaa-smoke-tests-staging
  - uaa-client-auditing-staging
  - uaa-monitor-account-creation-staging
  - tic-smoke-tests-staging
  - smoke-tests-staging
  - acceptance-tests-staging
  - test-space-egress-staging
  - deploy-cf-production
  - plan-cf-production
  - terraform-plan-production
  - terraform-apply-production
  - smoke-tests-production
  - uaa-smoke-tests-production
  - uaa-client-auditing-production
  - uaa-monitor-account-creation-production
  - tic-smoke-tests-production
  - test-space-egress-production
  - plan-cf-westb
  - deploy-cf-westb
  - terraform-plan-westb
  - terraform-apply-westb
  - smoke-tests-westb
  - uaa-smoke-tests-westb
  - uaa-client-auditing-westb
  - uaa-monitor-account-creation-westb
  - tic-smoke-tests-westb
  - test-space-egress-westb
- name: development
  jobs:
  - deploy-cf-development
  - terraform-plan-development
  - terraform-apply-development
  - uaa-smoke-tests-development
  - uaa-client-auditing-development
  - uaa-monitor-account-creation-development
  - tic-smoke-tests-development
  - smoke-tests-development
  - test-space-egress-development
- name: staging
  jobs:
  - deploy-cf-staging
  - terraform-plan-staging
  - terraform-apply-staging
  - uaa-smoke-tests-staging
  - uaa-client-auditing-staging
  - uaa-monitor-account-creation-staging
  - tic-smoke-tests-staging
  - smoke-tests-staging
  - acceptance-tests-staging
  - test-space-egress-staging
- name: production
  jobs:
  - plan-cf-production
  - deploy-cf-production
  - terraform-plan-production
  - terraform-apply-production
  - smoke-tests-production
  - uaa-smoke-tests-production
  - uaa-client-auditing-production
  - uaa-monitor-account-creation-production
  - tic-smoke-tests-production
  - test-space-egress-production
- name: westb
  jobs:
  - plan-cf-westb
  - deploy-cf-westb
  - terraform-plan-westb
  - terraform-apply-westb
  - smoke-tests-westb
  - uaa-smoke-tests-westb
  - uaa-client-auditing-westb
  - uaa-monitor-account-creation-westb
  - tic-smoke-tests-westb
  - test-space-egress-westb
